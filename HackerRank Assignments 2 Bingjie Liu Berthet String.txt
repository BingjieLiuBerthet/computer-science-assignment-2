
String(5)

Alternating Characters

import math
import os
import random
import re
import sys

def alternatingCharacters(s):
    c = 0
    char = s[0]
    for i in range(1, len(s)):
        if s[i] == char:
            c += 1
        else:
            char = s[i]
    return c

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    q = int(input())

    for q_itr in range(q):
        s = input()

        result = alternatingCharacters(s)

        fptr.write(str(result) + '\n')

    fptr.close()








CamelCase


import math
import os
import random
import re
import sys

def camelcase(s):
    count = 1
    for char in s:
        if char.isupper():
            count += 1
    return count

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = camelcase(s)

    fptr.write(str(result) + '\n')

    fptr.close()


Mars Exploration
s = input()
l = []
a = 0
b = 3
c = 0

for i in range(len(s) // 3):
    l.append(s[a:b])
    a += 3
    b += 3
for j in l:
    j = list(j)
    if j[0] != "S":
        c += 1
    if j[1] != "O":
        c += 1
    if j[2] != "S":
        c += 1

print(c)



Beautiful Binary String
n = int(input())
s = input()
print(s.count("010"))


The Love-Letter Mystery
import math
import os
import random
import re
import sys

def theLoveLetterMystery(s):
    count = 0
    n = len(s)
    for i in range(len(s)//2):
        count += abs(ord(s[i]) - ord(s[n-1-i]))

    return count

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    q = int(input())

    for q_itr in range(q):
        s = input()

        result = theLoveLetterMystery(s)

        fptr.write(str(result) + '\n')

    fptr.close()










